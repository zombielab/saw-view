{"version":3,"sources":["../../src/compilers/blade-view-compiler.js"],"names":["value","result","startsWith","replace","match","string","directive","options","matches","tag","$tags","regex","push","arguments","compiled","resolver","apply","shift","$directives","foot","$footer","compile","$compile_path","BladeViewCompiler","constructor","compilePath","isExpired","path","$this","resolve","reject","stat","error","stats","mtime","createHash","update","digest","content","readFile","writeFile","compileString","compile_path","directives"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;+CA4EA,WAAuBA,KAAvB,EAA8B;AAAA;;AAC1B,YAAIC,SAAS,EAAb;;AAEA;AACA,YAAID,MAAME,UAAN,CAAiB,GAAjB,CAAJ,EAA2B;AACvBF,oBAAQ,MAAMA,KAAd;AACH;;AAEDA,cAAMG,OAAN,CAAc,yDAAd,EAAyE,UAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,OAA3B,EAAuC;AAC5G,gBAAI,OAAOF,MAAP,KAAkB,WAAlB,IAAiCA,UAAU,EAA/C,EAAmD;AAC/C,oBAAIG,UAAU,EAAd;;AAEA,qBAAK,IAAIC,GAAT,IAAgBC,KAAhB,EAAuB;AACnB,wBAAI,CAACC,KAAD,IAAUF,GAAd;;AAEAJ,2BAAOF,OAAP,CAAeQ,KAAf,EAAsB,YAAY;AAC9BH,gCAAQI,IAAR,CAAa,oBAAWC,SAAX,CAAb;AACH,qBAFD;AAGH;;AAED,oBAAIC,WAAW,eAAe,yBAAeT,MAAf,CAAf,GAAwC,KAAvD;;AAEA,qBAAK,IAAII,GAAT,IAAgBC,KAAhB,EAAuB;AACnB,wBAAI,CAACC,KAAD,EAAQI,QAAR,IAAoBN,GAAxB;;AAEAK,+BAAWA,SAASX,OAAT,CAAiBQ,KAAjB,EAAwB,YAAM;AACrC,+BAAOI,SAASC,KAAT,QAAqBR,QAAQS,KAAR,EAArB,CAAP;AACH,qBAFU,CAAX;AAGH;;AAEDhB,0BAAUa,QAAV;AACH;;AAED,gBAAI,OAAOI,YAAYZ,SAAZ,CAAP,KAAkC,WAAtC,EAAmD;AAC/CL,0BAAUiB,YAAYZ,SAAZ,EAAuBU,KAAvB,QAAmC,CAACT,OAAD,CAAnC,CAAV;AACH;AACJ,SA5BD;;AA8BA,aAAK,IAAIY,IAAT,IAAiBC,OAAjB,EAA0B;AACtBnB,sBAAUkB,IAAV;AACH;;AAEDC,kBAAU,EAAV;;AAEA,eAAO,sBACH,wBADG,GAEH,sBAFG,GAGHnB,MAHG,GAIH,kBAJG,GAKH,KALJ;AAMH,K;;oBAlDcoB,O;;;;;AA1Ef;;;;AACA;;;;AACA;;;;;;AAEA,IAAIC,aAAJ;AAAA,IACIF,UAAU,EADd;AAAA,IAEIV,QAAQ;AACJ;AACA,CACI,wBADJ,EAEI,CAACN,KAAD,EAAQJ,KAAR,KAAkB;AACd,WAAO,UAAUA,KAAV,GAAkB,OAAzB;AACH,CAJL,CAFI,EAQJ,CACI,4BADJ,EAEI,CAACI,KAAD,EAAQJ,KAAR,KAAkB;AACd,WAAO,UAAUA,KAAV,GAAkB,OAAzB;AACH,CAJL,CARI,EAcJ,CACI,6BADJ,EAEI,CAACI,KAAD,EAAQJ,KAAR,KAAkB;AACd,WAAO,UAAUA,KAAV,GAAkB,OAAzB;AACH,CAJL,CAdI,CAFZ;AAAA,IAuBIkB,cAAc;AACV,UAAOX,OAAD,IAAa;AACf,eAAO,QAAQ,OAAOA,OAAP,KAAmB,WAAnB,GAAiC,OAAOA,OAAP,GAAiB,OAAlD,GAA4D,KAApE,CAAP;AACH,KAHS;AAIV,YAAQ,MAAM;AACV,eAAO,UAAP;AACH,KANS;AAOV,cAAWA,OAAD,IAAa;AACnB,eAAO,eAAe,OAAOA,OAAP,KAAmB,WAAnB,GAAiC,OAAOA,OAAP,GAAiB,OAAlD,GAA4D,KAA3E,CAAP;AACH,KATS;AAUV,aAAS,MAAM;AACX,eAAO,KAAP;AACH,KAZS;AAaV,WAAQA,OAAD,IAAa;AAChB,eAAO,SAAS,OAAOA,OAAP,KAAmB,WAAnB,GAAiC,OAAOA,OAAP,GAAiB,OAAlD,GAA4D,KAArE,CAAP;AACH,KAfS;AAgBV,cAAU,MAAM;AACZ,eAAO,KAAP;AACH,KAlBS;AAmBV,aAAUA,OAAD,IAAa;AAClB,eAAO,WAAW,OAAOA,OAAP,KAAmB,WAAnB,GAAiC,OAAOA,OAAP,GAAiB,OAAlD,GAA4D,KAAvE,CAAP;AACH,KArBS;AAsBV,gBAAY,MAAM;AACd,eAAO,KAAP;AACH,KAxBS;AAyBV,aAAS,MAAM;AACX,eAAO,UAAP;AACH,KA3BS;AA4BV,gBAAY,MAAM;AACd,eAAO,aAAP;AACH,KA9BS;AA+BV,aAAUA,OAAD,IAAa;AAClB,eAAO,oCAAoCA,OAApC,GAA8C,MAArD;AACH,KAjCS;AAkCV,eAAYA,OAAD,IAAa;AACpB,eAAO,qBAAqBA,OAArB,GAA+B,mCAAtC;AACH,KApCS;AAqCV,kBAAc,MAAM;AAChB,eAAO,2BAAP;AACH,KAvCS;AAwCV,eAAYA,OAAD,IAAa;AACpBa,gBAAQR,IAAR,CAAa,oCAAoCL,OAApC,GAA8C,qBAA3D;;AAEA,eAAO,EAAP;AACH;AA5CS,CAvBlB;;AAwHC;;AAED,MAAMgB,iBAAN,gCAA6C;AACzCC,gBAAYC,WAAZ,EAAyB;AACrB;;AAEAH,wBAAgBG,WAAhB;AACH;;AAEKC,aAAN,CAAgBC,IAAhB,EAAsB;AAAA;;AAAA;AAClB,gBAAIC,cAAJ;;AAEA,mBAAO,MAAM,sBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC1C,6BAAGC,IAAH,CAAQJ,IAAR,EAAc,UAACK,KAAD,EAAQC,KAAR,EAAkB;AAC5B,wBAAID,KAAJ,EAAW;AACPF,+BAAOE,KAAP;AACH;;AAED,iCAAGD,IAAH,CAAQH,MAAMd,QAAN,CAAea,IAAf,CAAR,EAA8B,UAACK,KAAD,EAAQlB,QAAR,EAAqB;AAC/C,4BAAIkB,KAAJ,EAAW;AACPH,oCAAQ,IAAR;AACH,yBAFD,MAEO;AACHA,oCAAQI,MAAMC,KAAN,IAAepB,SAASoB,KAAhC;AACH;AACJ,qBAND;AAOH,iBAZD;AAaH,aAdY,CAAb;AAHkB;AAkBrB;;AAEDpB,aAASa,IAAT,EAAe;AACX,eAAOL,gBAAgB,GAAhB,GAAsB,iBAAOa,UAAP,CAAkB,MAAlB,EAA0BC,MAA1B,CAAiCT,IAAjC,EAAuCU,MAAvC,CAA8C,KAA9C,CAAtB,GAA6E,KAApF;AACH;;AAEKhB,WAAN,CAAcM,IAAd,EAAoB;AAAA;;AAAA;AAChB,gBAAIC,cAAJ;AACA,gBAAIU,UAAU,MAAM,sBAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACjD,6BAAGS,QAAH,CAAYZ,IAAZ,EAAkB,OAAlB,EAA2B,UAACK,KAAD,EAAQM,OAAR,EAAoB;AAC3C,wBAAIN,KAAJ,EAAW;AACPF,+BAAOE,KAAP;AACH;;AAEDH,4BAAQS,OAAR;AACH,iBAND;AAOH,aARmB,CAApB;;AAUA,gBAAIxB,WAAW,MAAMO,QAAQiB,OAAR,CAArB;;AAEA,kBAAM,sBAAY,UAACT,OAAD,EAAUC,MAAV,EAAqB;AACnC,6BAAGU,SAAH,CAAaZ,MAAMd,QAAN,CAAea,IAAf,CAAb,EAAmCb,QAAnC,EAA6C,UAACkB,KAAD,EAAW;AACpD,wBAAIA,KAAJ,EAAW;AACPF,+BAAOE,KAAP;AACH;;AAEDH,4BAAQf,QAAR;AACH,iBAND;AAOH,aARK,CAAN;;AAUA,mBAAOA,QAAP;AAxBgB;AAyBnB;;AAEK2B,iBAAN,CAAoBzC,KAApB,EAA2B;AAAA;AACvB,mBAAO,MAAMqB,QAAQrB,KAAR,CAAb;AADuB;AAE1B;;AAED,QAAI0C,YAAJ,GAAmB;AACf,eAAOpB,aAAP;AACH;;AAED,QAAIqB,UAAJ,GAAiB;AACb,eAAOzB,WAAP;AACH;AApEwC;;kBAuE9BK,iB","file":"blade-view-compiler.js","sourcesContent":["\"use strict\";\n\nimport fs from \"fs\";\nimport crypto from \"crypto\";\nimport ViewCompiler from \"./view-compiler\";\n\nvar $compile_path,\n    $footer = [],\n    $tags = [\n        // TODO\n        [\n            /(?:\\{\\{([^{}]+)\\}\\})/gm,\n            (match, value) => {\n                return \"\\\" + \" + value + \" + \\\"\";\n            }\n        ],\n        [\n            /(?:\\{\\{\\{([^{}]+)\\}\\}\\})/gm,\n            (match, value) => {\n                return \"\\\" + \" + value + \" + \\\"\";\n            }\n        ],\n        [\n            /(?:\\{\\!\\!([^{}!]+)\\!\\!\\})/gm,\n            (match, value) => {\n                return \"\\\" + \" + value + \" + \\\"\";\n            }\n        ]\n    ],\n    $directives = {\n        \"if\": (options) => {\n            return \"if\" + (typeof options !== \"undefined\" ? \" (\" + options + \") {\\n\" : \"{\\n\");\n        },\n        \"else\": () => {\n            return \"} else {\";\n        },\n        \"elseif\": (options) => {\n            return \"} else if\" + (typeof options !== \"undefined\" ? \" (\" + options + \") {\\n\" : \"{\\n\");\n        },\n        \"endif\": () => {\n            return \"}\\n\";\n        },\n        \"for\": (options) => {\n            return \"for\" + (typeof options !== \"undefined\" ? \" (\" + options + \") {\\n\" : \"{\\n\");\n        },\n        \"endfor\": () => {\n            return \"}\\n\";\n        },\n        \"while\": (options) => {\n            return \"while\" + (typeof options !== \"undefined\" ? \" (\" + options + \") {\\n\" : \"{\\n\");\n        },\n        \"endwhile\": () => {\n            return \"}\\n\";\n        },\n        \"break\": () => {\n            return \"break;\\n\"\n        },\n        \"continue\": () => {\n            return \"continue;\\n\";\n        },\n        \"yield\": (options) => {\n            return \"$print += yield $factory.yield(\" + options + \");\\n\";\n        },\n        \"section\": (options) => {\n            return \"$factory.inject(\" + options + \", (() => {\\n var $print = \\\"\\\";\\n\";\n        },\n        \"endsection\": () => {\n            return \"return $print;\\n })());\\n\";\n        },\n        \"extends\": (options) => {\n            $footer.push(\"$print = yield $factory.render(\" + options + \", $defined_vars);\\n\");\n\n            return \"\";\n        }\n    };\n\nasync function compile(value) {\n    var result = \"\";\n\n    // TODO: improve regex matching & delete this temporary fix\n    if (value.startsWith('@')) {\n        value = \" \" + value;\n    }\n\n    value.replace(/([^@]+)(?:@(\\w+)(?:[ \\t]*)(?:(?:\\()([^()]+)(?:\\)))?)?/gm, (match, string, directive, options) => {\n        if (typeof string !== \"undefined\" && string != \"\") {\n            var matches = [];\n\n            for (var tag of $tags) {\n                var [regex] = tag;\n\n                string.replace(regex, function () {\n                    matches.push(Array.from(arguments));\n                });\n            }\n\n            var compiled = \"$print += \" + JSON.stringify(string) + \";\\n\";\n\n            for (var tag of $tags) {\n                var [regex, resolver] = tag;\n\n                compiled = compiled.replace(regex, () => {\n                    return resolver.apply(this, matches.shift());\n                });\n            }\n\n            result += compiled;\n        }\n\n        if (typeof $directives[directive] !== \"undefined\") {\n            result += $directives[directive].apply(this, [options]);\n        }\n    });\n\n    for (var foot of $footer) {\n        result += foot;\n    }\n\n    $footer = [];\n\n    return \"\\\"use strict\\\";\\n\" +\n        \"$async(function *(){\\n\" +\n        \"var $print = \\\"\\\";\\n\" +\n        result +\n        \"return $print;\\n\" +\n        \"});\";\n};\n\nclass BladeViewCompiler extends ViewCompiler {\n    constructor(compilePath) {\n        super();\n\n        $compile_path = compilePath;\n    }\n\n    async isExpired(path) {\n        var $this = this;\n\n        return await new Promise((resolve, reject) => {\n            fs.stat(path, (error, stats) => {\n                if (error) {\n                    reject(error);\n                }\n\n                fs.stat($this.compiled(path), (error, compiled) => {\n                    if (error) {\n                        resolve(true);\n                    } else {\n                        resolve(stats.mtime >= compiled.mtime);\n                    }\n                });\n            });\n        });\n    }\n\n    compiled(path) {\n        return $compile_path + \"/\" + crypto.createHash(\"sha1\").update(path).digest(\"hex\") + \".js\";\n    }\n\n    async compile(path) {\n        var $this = this;\n        var content = await new Promise((resolve, reject) => {\n            fs.readFile(path, \"utf-8\", (error, content) => {\n                if (error) {\n                    reject(error);\n                }\n\n                resolve(content);\n            });\n        });\n\n        var compiled = await compile(content);\n\n        await new Promise((resolve, reject) => {\n            fs.writeFile($this.compiled(path), compiled, (error) => {\n                if (error) {\n                    reject(error)\n                }\n\n                resolve(compiled);\n            });\n        });\n\n        return compiled;\n    }\n\n    async compileString(value) {\n        return await compile(value);\n    }\n\n    get compile_path() {\n        return $compile_path;\n    }\n\n    get directives() {\n        return $directives;\n    }\n}\n\nexport default BladeViewCompiler;"]}