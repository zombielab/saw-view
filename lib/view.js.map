{"version":3,"sources":["../src/view.js"],"names":["$factory","$engine","$name","$path","$data","View","constructor","factory","engine","name","path","data","set","render","object_merge","get","shared","content","flush","error"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA;;;;;;AAEA,IAAIA,QAAJ;AAAA,IACIC,UAAU,uBADd;AAAA,IAEIC,QAAQ,uBAFZ;AAAA,IAGIC,QAAQ,uBAHZ;AAAA,IAIIC,QAAQ,uBAJZ;;AAMA,MAAMC,IAAN,CAAW;AACPC,gBAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,OAAO,EAAhD,EAAoD;AAChDX,mBAAWO,OAAX;AACAN,gBAAQW,GAAR,CAAY,IAAZ,EAAkBJ,MAAlB;AACAN,cAAMU,GAAN,CAAU,IAAV,EAAgBH,IAAhB;AACAN,cAAMS,GAAN,CAAU,IAAV,EAAgBF,IAAhB;AACAN,cAAMQ,GAAN,CAAU,IAAV,EAAgBD,IAAhB;AACH;;AAEKE,UAAN,GAAe;AAAA;;AAAA;AACX,gBAAIF,OAAO,EAAX;AACA,8BAAQG,YAAR,CAAqBH,IAArB,EAA2BP,MAAMW,GAAN,OAA3B;AACA,8BAAQD,YAAR,CAAqBH,IAArB,EAA2BX,SAASgB,MAApC;;AAEA,gBAAI;AACA,oBAAIC,UAAU,MAAOhB,QAAQc,GAAR,OAAD,CAAoBA,GAApB,CAAwBZ,MAAMY,GAAN,OAAxB,EAAyCJ,IAAzC,CAApB;;AAEAX,yBAASkB,KAAT;AACH,aAJD,CAIE,OAAOC,KAAP,EAAc;AACZnB,yBAASkB,KAAT;;AAEA,sBAAMC,KAAN;AACH;;AAED,mBAAOF,OAAP;AAfW;AAgBd;;AAED,QAAIR,IAAJ,GAAW;AACP,eAAOP,MAAMa,GAAN,CAAU,IAAV,CAAP;AACH;;AAED,QAAIL,IAAJ,GAAW;AACP,eAAOP,MAAMY,GAAN,CAAU,IAAV,CAAP;AACH;;AAED,QAAIJ,IAAJ,GAAW;AACP,eAAOP,MAAMW,GAAN,CAAU,IAAV,CAAP;AACH;;AAED,QAAIR,OAAJ,GAAc;AACV,eAAOP,QAAP;AACH;;AAED,QAAIQ,MAAJ,GAAa;AACT,eAAOP,QAAQc,GAAR,CAAY,IAAZ,CAAP;AACH;AA7CM;;kBAgDIV,I","file":"view.js","sourcesContent":["\"use strict\";\n\nimport helpers from \"saw-support/helpers\";\n\nvar $factory,\n    $engine = new WeakMap(),\n    $name = new WeakMap(),\n    $path = new WeakMap(),\n    $data = new WeakMap();\n\nclass View {\n    constructor(factory, engine, name, path, data = {}) {\n        $factory = factory;\n        $engine.set(this, engine);\n        $name.set(this, name);\n        $path.set(this, path);\n        $data.set(this, data);\n    }\n\n    async render() {\n        var data = {};\n        helpers.object_merge(data, $data.get(this));\n        helpers.object_merge(data, $factory.shared);\n\n        try {\n            var content = await ($engine.get(this)).get($path.get(this), data);\n\n            $factory.flush();\n        } catch (error) {\n            $factory.flush();\n\n            throw error;\n        }\n\n        return content;\n    }\n\n    get name() {\n        return $name.get(this);\n    }\n\n    get path() {\n        return $path.get(this);\n    }\n\n    get data() {\n        return $data.get(this);\n    }\n\n    get factory() {\n        return $factory;\n    }\n\n    get engine() {\n        return $engine.get(this);\n    }\n}\n\nexport default View;"]}